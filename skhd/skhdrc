
# focusing windows
ctrl + alt - h: yabai -m window --focus west
ctrl + alt - j: yabai -m window --focus south
ctrl + alt - k: yabai -m window --focus north
ctrl + alt - l: yabai -m window --focus east

# unlock/Lock
ctrl + alt - f: yabai -m window --toggle float

# swapping windows
shift + alt - h: yabai -m window --warp west
shift + alt - j: yabai -m window --warp south
shift + alt - k: yabai -m window --warp north
shift + alt - l: yabai -m window --warp east

# toggle horizontal/vertical split
shift + alt - s: yabai -m window --toggle split

# toggle float
shift + alt - f: yabai -m config layout float
shift + alt - m: yabai -m config layout bsp

# moving spaces
#ctrl + shift - h: yabai -m window --space prev
#ctrl + shift - l: yabai -m window --space next

# resizing windows
alt - h: yabai -m window --resize right:-60:0; yabai -m window --resize left:-60:0
alt - l: yabai -m window --resize left:60:0; yabai -m window --resize right:60:0

# killing windows
alt + shift - c: osascript -e 'tell application "System Events" to perform action "AXPress" of (first button whose subrole is "AXCloseButton") of (first window whose subrole is "AXStandardWindow") of (first process whose frontmost is true)'

# opening iterm
alt + shift - return: osascript -e 'tell application "iTerm2"' -e 'set newWindow to (create window with default profile)' -e 'end tell'

# moving around
alt - 1: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[0]')
alt - 2: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[1]')
alt - 3: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[2]')
alt - 4: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[3]')
alt - 5: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[4]')
alt - 6: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[5]')
alt - 7: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[6]')
alt - 8: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[7]')
alt - 9: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[8]')
alt - 0: yabai -m space --focus $(yabai -m query --displays --display | jq -er '.spaces[9]')

alt + shift - 1: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[0]')
alt + shift - 2: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[1]')
alt + shift - 3: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[2]')
alt + shift - 4: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[3]')
alt + shift - 5: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[4]')
alt + shift - 6: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[5]')
alt + shift - 7: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[6]')
alt + shift - 8: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[7]')
alt + shift - 9: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[8]')
alt + shift - 0: yabai -m window --space $(yabai -m query --displays --display | jq -er '.spaces[9]')

# finder
cmd + shift - return: open $HOME

# display
#ctrl - k: yabai -m display --focus next
#ctrl - j: yabai -m display --focus prev

### Kitty ###
# alt + shift - return: kitty --single-instance -d ~
ctrl + alt - n: open -a iTerm .

### Emacs Daemon ###
cmd + shift - e: emacsclient -c -e "(toggle-scroll-bar -1)"
